AdditionParcelsDescription
As of 6/8/2018
Validation (Not Defined)

Required
AND[
	{AdditionalParcelsYN}
	]
Available (Not Defined)

Warning (Not Defined)

AdditionalRentForPets 
As of 6/8/2018 
Validation (Not Defined)

Required
AND[
	ListContainsAny({PetsAllowed.R_Value},"BRDR,COK,DOK,NLIM,SLIM,YES")
	LetFieldValue = {AdditionalRentForPets.r_Value},OrigFieldValue = Original.AdditionalRentForPets.r_Value}In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
	ListContainsAny({PropertyType.r_value},"RLSE")
	] 
Available (Not Defined)

Warning (Not Defined)

Assessments
As of 6/11/2018
Validation (Not Defined)

Required
AND	[
	{PropertyType.r_Value} = "RESI"
	!(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
	LetFieldValue = {Assessments.r_Value},
OrigFieldValue = {Original.Assessments.r_Value}
In
!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
	]

Available (Not Defined)

Warning (Not Defined)

AssociationAmenities
As of 6/11/2018
Validation (Not Defined)

Required
AND	[
	{PropertyType.r_Value} = "RESI"
	{AssociationYN} = ~true
	LetFieldValue = {AssociationAmenities.r_Value},
OrigFieldValue = {Original.AssociationAmenities.r_Value}
In
!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
	]

Available (Not Defined)

Warning (Not Defined)

AssociationFee
As of 6/11/2018
Validation
AND	[
	OR	[
		NOT	[
			{PropertyType.r_Value} = "RESI"
			]
		AND	[
			{PropertyType.r_Value} = "RESI"
			OR	[
				IsEmpty({AssociationFee})
				(({AssociationFee}) >=0.0) AND (({AssociationFee}) <=9999.99)
				]]
		AND	[
			{PropertyType.r_Value} = "RESI"
			OR	[
				IsEmpty({AssociationFee})
				(({AssociationFee}) >=0.0) AND (({AssociationFee}) <=99999.99)
				]
			ListContainsAny({AssociationFeeFrequency.r_Value},"QTR,ANU")
			]]]

Required
AND	[
	{PropertyType.r_Value} = "RESI"
	{AssociationYN} = ~true
	]

Available (Not Defined)

Warning (Not Defined)
		
AssociationFeeFrequency
As of 6/11/2018
Validation (Not Defined)

Required
AND	[
	ListContainsAny({PropertyType.r_value},"RESI")
	{AssociationFee} > 0.0
	!(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
	Let
FieldValue = {AssociationFeeFrequency.r_Value},
OrigFieldValue = {Original.AssociationFeeFrequency.r_Value}
In
!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
	]

Available (Not Defined)

Warning (Not Defined)

AssociationName
As of 6/11/2018
Validation (Not Defined)

Required
AND	[
	{PropertyType.r_Value} = "RESI"
	{AssociationYN} = ~true
	LetFieldValue = {AssociationName},
OrigFieldValue = {Original.AssociationName}
In
!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
	]

Available (Not Defined)

Warning (Not Defined)

AssociationPhone
As of 6/11/2018

Validation (Not Defined)

Required
AND	[
	{PropertyType.r_Value} = "RESI"
	{AssociationYN} = ~true
	LetFieldValue = {AssociationPhone},
OrigFieldValue = {Original.AssociationPhone}
In
!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
	]

Available (Not Defined)

Warning (Not Defined)

AssociationYN
As of 6/11/2018
Validation (Not Defined)

Required
AND	[
	ListContainsAny({PropertyType.r_value},"RESI,RLSE,LAND,MANU")
	!(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
	LetFieldValue = {AssociationYN},
OrigFieldValue = {Original.AssociationYN}
In
!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
	]

Available (Not Defined)

Warning (Not Defined)

AttachedGarageYN
As of 6/11/2018
Validation (Not Defined)

Required
And	[
	{GarageSpaces} >= 1.0
	LetFieldName = {AttachedGarageYN},
OrigFieldName = {Original.AttachedGarageYN},
Status = (ListContainsAny({StandardStatus.r_value},"A,P")),
OrigStatus = (({Original.StandardStatus.R_Value}??"I") = "I")
In
!IsEmpty(FieldName) OR (!IsEmpty(OrigFieldName)) OR (OrigStatus and Status)
	ListContainsAny({PropertyType.r_value},"RESI,RLSE,MANU")
	]

Available (Not Defined)

Warning (Not Defined)

AvailabilityDate
As of 6/11/2018
Validation (Not Defined)

Required
AND	[
	ListContainsAny({PropertyType.r_value},"RLSE")
	!(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
	LetFieldValue = {AvailabilityDate},
OrigFieldValue = {Original.AvailabilityDate}
In
!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
	]

Available (Not Defined)

Warning (Not Defined)

BathroomsFull
As of 6/11/2018
Validation
AND	[
	OR	[
		IsEmpty({BathroomsFull})
		({BathroomsFull} >=0) AND ({BathroomsFull} <=25)
		]]

Required
AND	[
	ListContainsAny({PropertyType.r_value},"RESI,RLSE,MANU")
	NOT	[
		OR	[
			!IsEmpty({BathroomsHalf}) OR !IsEmpty({BathroomsOneQuarter}) OR !IsEmpty({BathroomsThreeQuarter})
			AND	[
				{System.TranType} = "UPDATE"
				IsEmpty( {Original.BathroomsFull}) AND IsEmpty( {Original.BathroomsThreeQuarter}) AND IsEmpty( {Original.BathroomsHalf}) AND IsEmpty( {Original.BathroomsOneQuarter})
				
Available (Not Defined)

Warning (Not Defined)

BathroomsHalf
As of 6/11/2018
Validation
AND	[
	OR	[
		IsEmpty({BathroomsHalf})
		({BathroomsHalf} >=0) AND ({BathroomsHalf} <=24)
		]]

Required
AND	[
	ListContainsAny({PropertyType.r_value},"RESI")
	NOT	[
		OR	[
			!IsEmpty({BathroomsFull}) OR !IsEmpty({BathroomsOneQuarter}) OR !IsEmpty({BathroomsThreeQuarter})
			AND	[
				{System.TranType} = "UPDATE"
				IsEmpty( {Original.BathroomsFull}) AND IsEmpty( {Original.BathroomsThreeQuarter}) AND IsEmpty( {Original.BathroomsHalf}) AND IsEmpty( {Original.BathroomsOneQuarter})
				]]]]

Available (Not Defined)

Warning (Not Defined)

BathroomOneQuarter
As of 6/11/2018
Validation
AND	[
	OR	[
		IsEmpty({BathroomsOneQuarter})
		({BathroomsOneQuarter} >=0) AND ({BathroomsOneQuarter} <=24)
		]

Required
AND	[
	ListContainsAny({PropertyType.r_value},"RESI")
	NOT	[
		OR	[
			!IsEmpty({BathroomsFull}) OR !IsEmpty({BathroomsThreeQuarter}) OR !IsEmpty({BathroomsHalf}) OR !IsEmpty({BathroomsFullAndThreeQuarter})
			AND	[
				{System.TranType} = "UPDATE"
				IsEmpty( {Original.BathroomsFull}) AND IsEmpty( {Original.BathroomsThreeQuarter}) AND IsEmpty( {Original.BathroomsHalf}) AND IsEmpty( {Original.BathroomsOneQuarter})
				]]]]]

Available (Not Defined)

Warning (Not Defined)

BathroomThreeQuarter
As of 6/11/2018
Validation
AND	[
	OR	[
		IsEmpty({BathroomsThreeQuarter})
		({BathroomsThreeQuarter} >=0) AND ({BathroomsThreeQuarter} <=24)
		]]

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI")
       NOT	[
OR	[
       !IsEmpty({BathroomsFull}) OR !IsEmpty({BathroomsOneQuarter}) OR !IsEmpty({BathroomsHalf})
       AND	[
       {System.TranType} = "UPDATE"
       IsEmpty( {Original.BathroomsFull}) AND IsEmpty( {Original.BathroomsThreeQuarter}) AND IsEmpty( {Original.BathroomsHalf}) AND IsEmpty( {Original.BathroomsOneQuarter})]]]]
       
Available (Not Defined)

Warning (Not Defined)

BedroomsTotal
As of 6/11/2018
Validation (Not Defined)

Required
AND	[
	ListContainsAny({PropertyType.r_value},"RESI,RLSE,MANU")
	]

Available (Not Defined)

Warning (Not Defined)

BuildingAreaTotal
As of 6/11/2018
Validation
AND	[
       OR	[
       ListContainsAny({PropertyType.r_value},"RINC,LAND,BUSOP")
       IsEmpty({BuildingAreaTotal})
       Lower Value: ToFloat(99)
Upper Value: ToFloat(500001)
]]

Required
AND	[
	ListContainsAny({PropertyType.r_value},"COMM,CLSE,RINC")
       Not	[
       AND	[
       ListContainsAny({PropertyType.r_value},"COMM,CLSE")
       {PropertySubType.r_Value} = "LND"
       ]]
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       Let
       FieldValue = {BuildingAreaTotal},
       OrigFieldValue = {Original.BuildingAreaTotal}
       In
       !IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

BuildingStatus
As of 6/11/2018
Validation (Not Defined)

Required
AND	[
	ListContainsAny({PropertyType.r_value},"COMM")
	!ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ")
	]

Available (Not Defined)

Warning (Not Defined)

BusinessType
As of 6/11/2018
Validation (Not Defined)

Required
AND	[
	ListContainsAny({PropertyType.r_value},"BUSOP")
	]

Available (Not Defined)

Warning (Not Defined)

BuyerAgencyCompensationNumber
As of 6/11/2018
Validation
AND	[
	OR	[
       IsEmpty({BuyerAgencyCompensationNumber})
       ListContainsAny({ListingAgreement.r_value},"OP")
       ListContainsAny({BuyerAgencyCompensationType.r_value},"REM")
       AND	[
       Lower Value: 0.000
       Upper Value: 1000.000
       ListContainsAny({BuyerAgencyCompensationType.r_value},"PER")
       ]
       AND	[
       IsEmpty( {BuyerAgencyCompensationType.r_value})
       IsEmpty({BuyerAgencyCompensationNumber})
       ]
       AND	[
       ListContainsAny({BuyerAgencyCompensationType.r_value},"DOL")
       Value to Check: ToString({BuyerAgencyCompensationNumber})
       Regular Expression: ^\d{1,8}$
       ]
       
       Let
       	FieldName = {BuyerAgencyCompensationNumber},
       	OrigFieldName = {Original.BuyerAgencyCompensationNumber},
       	BasedOnFieldName = {BuyerAgencyCompensationType.r_value},
       	OrigBasedOnFieldName = {Original.BuyerAgencyCompensationType.r_value},
       	BasedOnFieldName2 = {ListingAgreement.r_value},
       	OrigBasedOnFieldName2 = {Original.ListingAgreement.r_value}
       In
       	(FieldName = OrigFieldName) AND (BasedOnFieldName = OrigBasedOnFieldName) AND (BasedOnFieldName2 = OrigBasedOnFieldName2) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and {StandardStatus.r_Value} = "A")
       ]]
       
Required
AND	[
	!(( {ListingAgreement.r_value}) = "OP")
	]

Available (Not Defined)

Warning (Not Defined)

BuyerAgencyCompensationPer
As of 6/11/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ToString( {ListingAgreement.r_value}) = "OP")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {BuyerAgencyCompensationPer.r_Value},
       OrigFieldValue = {Original.BuyerAgencyCompensationPer.r_Value}
       In
       !IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

BuyerAgencyCompensationType
As of 6/12/2018
Validation
AND	[
       OR	[
       AND	[
       ({BuyerAgencyCompensationNumber} = 0.000)
       {BuyerAgencyCompensationType.r_value} = "REM"
       ({ListingAgreement.r_value}) = "OP"
       ]
       AND	[
       !({BuyerAgencyCompensationType.r_value} = "REM")
       ({BuyerAgencyCompensationNumber} > 0.000)
       ]
       LetNewValue = {BuyerAgencyCompensationType.r_value},
       OldValue = {Original.BuyerAgencyCompensationType.r_value}
       In
       (NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       ]]

Required
AND	[
       !(ToString( {ListingAgreement.r_value}) = "OP")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       !({BuyerAgencyCompensationNumber} = 0.000)
       ]
       
Available (Not Defined)

Warning (Not Defined)

BuyerAgentMlsId
As of 6/12/2018
Validation
AND	[
       OR	[
       AND	[
       (!IsEmpty({SA.Matrix_Unique_ID}))?(( ({SA.MemberStatus.r_value})) = "A"):(~False)
AND	[
       (UpperCase(ToString({BuyerAgentMlsId})) = "NONE-AUCTION")?({SpecialListingConditions.r_value} = "AUCT" ):(~True)
       (UpperCase(ToString({BuyerAgentMlsId})) = "NONE-AUCTION")?ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"):(~True)
       ]
       ]
       LetNewValue = {BuyerAgentMlsId},
       OldValue = {Original.BuyerAgentMlsId}
       In
       (NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       IsEmpty( {BuyerAgentMlsId})
       ]]
       
Required
AND	[
       ListContainsAny({StandardStatus.R_Value},"S")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

BuyerAgentStateLicense
As of 6/12/2018
Validation
AND	[
       OR	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ")
       (UpperCase(ToString({StandardStatus.r_value})) = "S")?(!ContainsRegx(Trim({BuyerAgentStateLicense}),"(^1{7,20}$)|(^2{7,20}$)|(^3{7,20}$)|(^4{7,20}$)|(^5{7,20}$)|(^6{7,20}$)|(^7{7,20}$)|(^8{7,20}$)|(^9{7,20}$)|(^0{7,20}$)")):(~True)
       ]]
       
Required
AND	[
       ListContainsAny({StandardStatus.R_Value},"S")
       !(UpperCase(Trim(ToString({BuyerAgentMlsId})))="NONE-AUCTION")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       OR	[
       UpperCase(Trim(ToString({BuyerAgentMlsId})))="AMNONMEMBER" 
       OR   UpperCase(Trim(ToString({BuyerAgentMlsId})))="A39999" 
       OR  UpperCase(Trim(ToString({BuyerAgentMlsId})))="FNONMEMBER" 
       OR  UpperCase(Trim(ToString({BuyerAgentMlsId})))="CH99999" 
       OR  UpperCase(Trim(ToString({BuyerAgentMlsId})))="C29999" 
       OR  UpperCase(Trim(ToString({BuyerAgentMlsId})))="DCNONMEMBER" 
       OR  UpperCase(Trim(ToString({BuyerAgentMlsId})))="NONMLSE" 
       OR  UpperCase(Trim(ToString({BuyerAgentMlsId})))="NOUTSIDE" 
       OR  UpperCase(Trim(ToString({BuyerAgentMlsId})))="IRECP" 
       OR  UpperCase(Trim(ToString({BuyerAgentMlsId})))="LC99999" 
       OR  UpperCase(Trim(ToString({BuyerAgentMlsId})))="MD991111111" 
       OR  UpperCase(Trim(ToString({BuyerAgentMlsId})))="MPNONMEMBER" 
       OR UpperCase(Trim(ToString({BuyerAgentMlsId})))="MC99999" 
       OR   UpperCase(Trim(ToString({BuyerAgentMlsId})))="M43999" 
       OR   UpperCase(Trim(ToString({BuyerAgentMlsId})))="OR95965" 
       OR   UpperCase(Trim(ToString({BuyerAgentMlsId})))="VNONMEM" 
       OR UpperCase(Trim(ToString({BuyerAgentMlsId})))="PANONMEMBER" 
       OR UpperCase(Trim(ToString({BuyerAgentMlsId})))="SOUTSIDE" 
       OR   UpperCase(Trim(ToString({BuyerAgentMlsId})))="FOUT" 
       OR   UpperCase(Trim(ToString({BuyerAgentMlsId})))="TNONMLS" 
       OR   UpperCase(Trim(ToString({BuyerAgentMlsId})))="TC999" 
       OR   UpperCase(Trim(ToString({BuyerAgentMlsId})))="KRECP" 
       OR   UpperCase(Trim(ToString({BuyerAgentMlsId})))="H69999" 
       OR   UpperCase(Trim(ToString({BuyerAgentMlsId})))="W79999" 
       OR   UpperCase(Trim(ToString({BuyerAgentMlsId})))="YG000000000" 
       OR UpperCase(Trim(ToString({BuyerAgentMlsId})))="699"
       (IsEmpty({BuyerAgentStateLicense})) AND (!IsEmpty({BuyerAgentMlsId}))
       ]]
       
Available (Not Defined)

Warning (Not Defined)

BuyerFinancing
As of 6/12/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({StandardStatus.R_Value},"S")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       NOT	[
       ListContainsAny({PropertyType.r_value},"RLSE,CLSE")
       ]]
       
Available (Not Defined)

Warning (Not Defined)

BuyerTeamKey
As of 6/12/2018
Validation
AND	[
       OR	[
       IsEmpty({BuyerTeamKey})
       SA Member of Teams
SA Leader of Team
]]

Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

CancelationDate
As of 6/12/2018
Validation
AND	[
       OR	[
       IsEmpty({CancelationDate})
       {CancelationDate}={Original.CancelationDate}
       AND	[
       {CancelationDate} <= {System.Today} AND {CancelationDate} >= {ListingContractDate}
ListContainsAny({StandardStatus.R_Value},"K")
]
       !(ListContainsAny({StandardStatus.R_Value},"K"))
       ]]
       
Required
AND	[
       ListContainsAny({StandardStatus.R_Value},"K")
       ]
       
Available (Not Defined)

Warning (Not Defined)

CashiersCheck
As of 6/12/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {CashiersCheck.r_Value},
       OrigFieldValue = {Original.CashiersCheck.r_Value}
       In
       !IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

Certified433aYN
As of 6/12/2018
Validation (Not Defined)

Required
AND	[
       AND	[
       OR	[
       ListContainsAny({PropertyType.r_value},"RESI")
       ListContainsAny({PropertyType.r_value},"RLSE")
       ]
       (ListContainsAny({PropertySubType.r_value},"MANL"))
       ]
       LetFieldValue = {Certified433aYN},
       OrigFieldValue = {Original.Certified433aYN}
       In
       !IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

City
As of 6/12/2018
Validation (Not Defined)

Required
AND	[
       ~true
       ]
       
Available (Not Defined)

Warning (Not Defined)

CloseDate
As of 6/12/2018
Validation
AND	[
       OR	[
       AND	[
       {CloseDate} >= {ListingContractDate}
       {CloseDate} >= {PurchaseContractDate}
       {CloseDate} <= ToDate(ToString(Today( ),"MM/dd/yyyy"))
       ]
       ToString({CloseDate},"MM/dd/yyy") = ToString({Original.CloseDate} ,"MM/dd/yyy")
       !(ListContainsAny({StandardStatus.R_Value},"S"))
       IsEmpty({CloseDate})
       ]]	
       
Required
AND	[
       ListContainsAny({StandardStatus.R_Value},"S")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

ClosePrice
As of 6/12/2018
Validation
AND	[
       OR	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ")
       {ClosePrice} = {Original.ClosePrice}
       AND	[
       OR	[
       AND	[
       ({ClosePrice} > 8888.0 AND {ClosePrice} < 999999999.0)
       !(ListContainsAny({PropertySubType.r_value},"TIMESHARE,TIME"))
       ]
       AND	[
       ({ClosePrice} > 1.0 AND {ClosePrice} < 99999999.0)
       (ListContainsAny({PropertySubType.r_value},"TIMESHARE,TIME"))
       ]
       ]
       ]
       AND	[
       {PropertyType.r_Value}!="RESI"
       ({ClosePrice} > 1.0 AND {ClosePrice} < 99999999.0)
       ]
       ]]
       
Required
AND	[
       ListContainsAny({StandardStatus.R_Value},"S")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

CoBuyerAgentMlsId
As of 6/12/2018
Validation
AND	[
       OR	[
       IsEmpty({CoBuyerAgentMlsId})
       {CoBuyerAgentMlsId} = {Original.CoBuyerAgentMlsId}
       ((!IsEmpty({COSA.Matrix_Unique_ID}))?({COSA.MemberStatus.r_value} = "A"):(~False))
       ]]
       
Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)
CoBuyerAgentStateLicense
As of 6/12/2018
Validation
AND	[
       OR	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ")
       (UpperCase(ToString({StandardStatus.r_value})) = "S")?(!ContainsRegx(Trim({CoBuyerAgentMlsId}),"(^1{7,20}$)|(^2{7,20}$)|(^3{7,20}$)|(^4{7,20}$)|(^5{7,20}$)|(^6{7,20}$)|(^7{7,20}$)|(^8{7,20}$)|(^9{7,20}$)|(^0{7,20}$)")):(~True)
       ]]
       
Required
AND	[
       ListContainsAny({StandardStatus.R_Value},"S")
       OR	[
       UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="AMNONMEMBER" 
       OR   UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="A39999" 
       OR  UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="FNONMEMBER" 
       OR  UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="CH99999" 
       OR  UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="C29999" 
       OR  UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="DCNONMEMBER" 
       OR  UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="NONMLSE" 
       OR  UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="NOUTSIDE" 
       OR  UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="IRECP" 
       OR  UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="LC99999" 
       OR  UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="MD991111111" 
       OR  UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="MPNONMEMBER" 
       OR UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="MC99999" 
       OR   UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="M43999" 
       OR   UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="OR95965" 
       OR   UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="VNONMEM" 
       OR UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="PANONMEMBER" 
       OR UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="SOUTSIDE" 
       OR   UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="FOUT" 
       OR   UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="TNONMLS" 
       OR   UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="TC999" 
       OR   UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="KRECP" 
       OR   UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="H69999" 
       OR   UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="W79999" 
       OR   UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="YG000000000" 
       OR UpperCase(Trim(ToString({CoBuyerAgentMlsId})))="699"
       (IsEmpty({CoBuyerAgentStateLicense})) AND (!IsEmpty({CoBuyerAgentMlsId}))
       ]]
Available (Not Defined)

Warning (Not Defined)

CoBuyerTeamKey
As of 6/12/2018
Validation
AND	[
       OR(MSG)	[
       IsEmpty({CoBuyerTeamKey})
       CoSA Member of Team
       CoSA Leader of Team
       ]]
       
Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

CoListAgentMlsId
As of 6/12/2018
Validation
AND	[
       OR	[
       IsEmpty({CoListAgentMlsId})
       {CoListAgentMlsId} = {Original.CoListAgentMlsId}
       ((!IsEmpty({COLA.Matrix_Unique_ID}))?({COLA.MemberStatus.r_value} = "A"):(~False)) AND(!(ListContainsAny({COLA.MemberMlsSecurityClass.R_Value},"PA,OA,OG,OD,PH,TP,ON,AP")) AND (UpperCase(ToString({COLA.MemberLoginID})) != "NONMEMBER"))
       ]
       OR: Only LA Can Edit COLA	[
       AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"OM,HB,DB,OA")
       OR	[
       {ListOfficeKeyNumeric}={UserData.OfficeKeyNumeric}
       {LO.MainOfficeKeyNumeric}={UserData.Office.MainOfficeKeyNumeric}
       ]
       ]
       AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"BANGN,BANGM")
       (IsEmpty({CoListAgentMlsId}))?(UpperCase(ToString({UserData.MemberAOR.r_value})) = UpperCase(ToString({LA.MemberAOR.r_value}))):((UpperCase(ToString({UserData.MemberAOR.r_value})) = UpperCase(ToString({LA.MemberAOR.r_value}))) OR (UpperCase(ToString({UserData.MemberAOR.r_value})) = UpperCase(ToString({COLA.MemberAOR.r_value}))))
       ]
       AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"AG,HA,AS")
       ({ListAgentKeyNumeric}={UserData.Matrix_Unique_ID})
       ]
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGQ,BANGP")
       {CoListAgentMlsId} = {Original.CoListAgentMlsId}
       ]]
       
Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

CoListAgentStateLicense
As of 6/12/2018
Validation
AND	[
       OR	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ")
       (UpperCase(ToString({StandardStatus.r_value})) = "A")?(!ContainsRegx(Trim({CoListAgentStateLicense}),"(^1{7,20}$)|(^2{7,20}$)|(^3{7,20}$)|(^4{7,20}$)|(^5{7,20}$)|(^6{7,20}$)|(^7{7,20}$)|(^8{7,20}$)|(^9{7,20}$)|(^0{7,20}$)")):(~True)
       Let
       NewValue = {CoListAgentStateLicense},
       OldValue = {Original.CoListAgentStateLicense}
       In
       (NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       ]]
       
Required
AND	[
       (IsEmpty({CoListAgentStateLicense})) AND (!IsEmpty({CoListAgentMlsId}))
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       Let
       FieldValue = {CoListAgentStateLicense},
       OrigFieldValue = {Original.CoListAgentStateLicense}
       In
       !IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

CoListTeamKey
As of 6/12/2018
Validation
AND	[
       OR(MSG)	[
       IsEmpty({CoListTeamKey})
       CoLA Member of Team
       CoLA Leader of Team
       ]]
       
Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

CommonInterest
As of 6/12/2018
Validation
AND	[
       OR	[
       AND	[
       {PropertyType.r_value}="RESI"
       ({CommonInterest.r_value}="CONDO" AND !ListContainsAny({PropertySubType.r_value},"COOP,MANL,OYO,TIME")) 
       OR({CommonInterest.r_value}="PD" AND !ListContainsAny({PropertySubType.r_value},"COOP,OYO,TIME")) 
       OR({CommonInterest.r_value}="COOP" AND !ListContainsAny({PropertySubType.r_value},"CONDO,OYO,TIME")) 
       OR({CommonInterest.r_value}="COAP" AND !ListContainsAny({PropertySubType.r_value},"COOP,CONDO,TIME")) 
       OR({CommonInterest.r_value}="TIME" AND !ListContainsAny({PropertySubType.r_value},"COOP,CONDO,OYO")) 
       OR({CommonInterest.r_value}="NONE" AND !ListContainsAny({PropertySubType.r_value},"CONDO,COOP,OYO,STUD,APT,LOFT,TIME"))
       ]
       AND	[
       {PropertyType.r_value}="RINC"
       ({CommonInterest.r_value}="CONDO" AND !ListContainsAny({PropertySubType.r_value},"COOP,MANL,OYO")) 
       OR({CommonInterest.r_value}="PD" AND !ListContainsAny({PropertySubType.r_value},"COOP,OYO")) 
       OR({CommonInterest.r_value}="COOP" AND !ListContainsAny({PropertySubType.r_value},"CONDO,OYO")) 
       OR({CommonInterest.r_value}="COAP" AND !ListContainsAny({PropertySubType.r_value},"CONDO,COOP")) 
       OR({CommonInterest.r_value}="TIME" AND !ListContainsAny({PropertySubType.r_value},"CONDO,COOP,OYO")) 
       OR({CommonInterest.r_value}="NONE" AND !ListContainsAny({PropertySubType.r_value},"CONDO,COOP,OYO,STUD,APT"))
       ]
       AND	[
       {PropertyType.r_value}="LAND"
       ({CommonInterest.r_value}="CONDO" AND {PropertySubType.r_value} ="BSLP")
       OR(ListContainsAny({CommonInterest.r_value},"PD,COOP,COAP,TIME") AND ({PropertySubType.r_value}!="WPOL" OR IsEmpty({PropertySubType.r_value}))) 
       OR({CommonInterest.r_value}="NONE" AND (ListContainsAny({PropertySubType.r_value},"WPWL,WPOL,BSLP") OR IsEmpty({PropertySubType.r_value})))
       ]
       AND	[
       {PropertyType.r_value}="COMM"
       ({CommonInterest.r_value}="CONDO" AND !ListContainsAny({PropertySubType.r_value},"HOT,LND,MOB,BUSI,ARGI")) 
       OR({CommonInterest.r_value}="PD" AND {PropertySubType.r_value}!="BUSI") 
       OR({CommonInterest.r_value}="COOP" AND !ListContainsAny({PropertySubType.r_value},"HOT,MOB,BUSI")) 
       OR({CommonInterest.r_value}="COAP" AND !ListContainsAny({PropertySubType.r_value},"HOT,MOB,BUSI")) 
       OR({CommonInterest.r_value}="NONE")
       ]
       ListContainsAny({PropertyType.r_value},"RLSE,MANU,CLSE,BUSOP,FARM")
       LetFieldName = {CommonInterest.r_value},
       OrigFieldName = {Original.CommonInterest.r_value}
       In(FieldName = OrigFieldName) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       ]]
       
Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,COMM,LAND")
       LetFieldName = {CommonInterest.r_value},
       OrigFieldName = {Original.CommonInterest.r_value},
       Status = ({StandardStatus.r_value} = "A"),
       OrigStatus = (({Original.StandardStatus.R_Value}??"I") = "I")
       In!IsEmpty(FieldName) OR (!IsEmpty(OrigFieldName)) OR (OrigStatus and Status)
       ]
       
Available (Not Defined)

Warning (Not Defined)

CommonWalls
As of 6/13/2018
Validation
AND	[
       OR	[
       AND	[
       (Contains( UpperCase(ToString({CommonWalls.r_value})),"1CW") and (Contains( UpperCase(ToString({CommonWalls.r_value})),"2CW") or Contains( UpperCase(ToString({CommonWalls.r_value})),"NCW") ))?(~false):(~true)
       (Contains( UpperCase(ToString({CommonWalls.r_value})),"2CW") and (Contains( UpperCase(ToString({CommonWalls.r_value})),"NCW") ))?(~false):(~true)
       (Contains( UpperCase(ToString({CommonWalls.r_value})),"NOA") and (Contains( UpperCase(ToString({CommonWalls.r_value})),"NCW") )?(~false):(~true))
       (Contains( UpperCase(ToString({CommonWalls.r_value})),"NOB") and (Contains( UpperCase(ToString({CommonWalls.r_value})),"NCW") )?(~false):(~true))
       !((!(Contains({CommonWalls.r_value},"1CW")) AND !(Contains({CommonWalls.r_value},"2CW")) AND !(Contains({CommonWalls.r_value},"1CW")) AND !(Contains({CommonWalls.r_value},"NCW"))) AND ((Contains({CommonWalls.r_value},"EU")) OR (Contains({CommonWalls.r_value},"NOA")) OR (Contains({CommonWalls.r_value},"NOB"))))
       ListContainsAny({PropertyType.r_value},"COMM,CLSE,BUSOP,LAND,MANU")
       LetNewValue = {CommonWalls.r_value},
       OldValue = {Original.CommonWalls.r_value}
       In(NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       IsEmpty( {CommonWalls.r_value})
       ]]]
       
Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,RINC")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {CommonWalls.r_Value},
       OrigFieldValue = {Original.CommonWalls.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

CommunityFeatures
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,RLSE,LAND,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {CommunityFeatures.r_Value},
       OrigFieldValue = {Original.CommunityFeatures.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

ConcessionsAmount
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({StandardStatus.R_Value},"S")
       NOT	[
       AND	[
       ({Original.StandardStatus.r_value}) = "S"
       IsEmpty( {Original.EstimatedConcessionsAmount})
       ]
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       ]]
       
Available (Not Defined)

Warning (Not Defined)

ConcessionsComments
As of 6/13/2018
Validation (Not Defined)

Required 
AND	[
       ListContainsAny({StandardStatus.R_Value},"S")
       NOT	[
       AND	[
       ({Original.StandardStatus.r_value}) = "S"
       IsEmpty( {Original.EstimatedConcessionsComments})
       ]
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       ]]
       
Available (Not Defined)

Warning (Not Defined)

ContactOrder1
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {ContactOrder1.r_Value},
       OrigFieldValue = {Original.ContactOrder1.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

Cooling
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {Cooling.r_Value},
       OrigFieldValue = {Original.Cooling.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

CountyOrParish
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ~true
       ]
       
Available (Not Defined)

Warning (Not Defined)

CreditAmount
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {CreditAmount},
       OrigFieldValue = {Original.CreditAmount}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

CreditCheckPaidBy
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {CreditCheckPaidBy.r_Value},
       OrigFieldValue = {Original.CreditCheckPaidBy.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

CurrentUseComments
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({CurrentUse.R_Value},"SEEREM")
       ]
       
Available (Not Defined)

Warning (Not Defined)

DepositKey
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
!(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
LetFieldValue = {DepositKey},
OrigFieldValue = {Original.DepositKey}
In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
]

Available (Not Defined)

Warning (Not Defined)

DepositOther
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {DepositOther},
       OrigFieldValue = {Original.DepositOther}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

DepositPets
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {DepositPets},
       OrigFieldValue = {Original.DepositPets}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

DepositSecurity
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {DepositSecurity},
       OrigFieldValue = {Original.DepositSecurity}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

Directions
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       LetFieldValue = {Directions},
       OrigFieldValue = {Original.Directions}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning
AND	[
       OR	[
       Not: MSG	[
       {Directions}
       (GPS)|(google(?! st| ave))|(mapquest)|(map)|(Thomas Guide)|(TG Map)
       ]
       Let
       NewValue = {Directions},
       OldValue = {Original.Directions}
       In
       (NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       ]]

DistanceToWaterComments
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"LAND")
       LetFieldValue = {DistanceToWaterComments},
       OrigFieldValue = {Original.DistanceToWaterComments}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

DivisibleSQFT
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"CLSE")
       ]
       
Available (Not Defined)

Warning (Not Defined)

DOH1
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
!(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
LetFieldValue = {DOH1},
OrigFieldValue = {Original.DOH1}
In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
]

Available (Not Defined)

Warning (Not Defined)

DOH2
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
!(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
ListContainsAny({BodyType.r_value},"DOUBLE,TRIPLE")
LetFieldValue = {DOH2},
OrigFieldValue = {Original.DOH2}
In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
]

Available (Not Defined)

Warning (Not Defined)
DOH3
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       ListContainsAny({BodyType.r_value},"TRIPLE")
       LetFieldValue = {DOH3},
       OrigFieldValue = {Original.DOH3}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

DualVariableCompensationYN
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ~true
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {DualVariableCompensationYN},
       OrigFieldValue = {Original.DualVariableCompensationYN}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

ElectricExpense
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
!({NumberOfSeparateElectricMeters} = {NumberOfUnitsTotal})
LetFieldValue = {ElectricExpense},
OrigFieldValue = {Original.ElectricExpense}
In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
]

Available (Not Defined)

Warning (Not Defined)

ElementarySchoolOther
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({ElementarySchool.R_Value},"OTHER")
       ]
       
Available (Not Defined)

Warning (Not Defined)

EstimatedBuyerAgentMlsId
As of 6/13/2018
Validation
AND	[
       OR	[
       ListContainsAny({PropertyType.r_value},"RLSE,COMM,CLSE,BUSOP")
       IsEmpty({EstimatedBuyerAgentMlsId})
       {EstimatedBuyerAgentMlsId} = {Original.EstimatedBuyerAgentMlsId}
       AND	[
       (!IsEmpty({ESA.Matrix_Unique_ID}))?(( ({ESA.MemberStatus.r_value})) = "A"):(~False)
       AND	[
       (UpperCase(ToString({EstimatedBuyerAgentMlsId})) = "NONE-AUCTION")?({SpecialListingConditions.r_value} = "AUCT") :(~True)
       (UpperCase(ToString({EstimatedBuyerAgentMlsId})) = "NONE-AUCTION")?((((UpperCase(ToString({UserData.MemberMlsSecurityClass.r_value})) = "BANGN") OR (UpperCase(ToString({UserData.MemberMlsSecurityClass.r_value})) = "BANGM") OR (UpperCase(ToString({UserData.MemberMlsSecurityClass.r_value})) = "BANGG") OR (UpperCase(ToString({UserData.MemberMlsSecurityClass.r_value})) = "BANGQ") OR (UpperCase(ToString({UserData.MemberMlsSecurityClass.r_value})) = "BANGP")))):(~True)
       ]
       ]]]
       
Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,LAND,MANU")
!(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
OR	[
       AND	[
       ListContainsAny({StandardStatus.R_Value},"P")
       NOT	[
       AND	[
       ({Original.StandardStatus.r_value}) = "P"
       IsEmpty( {Original.EstimatedBuyerAgentMlsId})
       IsEmpty( {EstimatedBuyerAgentMlsId}) AND IsEmpty( {EstimatedBuyerFinancing.r_value}) AND IsEmpty({EstimatedCloseDate}) AND IsEmpty({EstimatedClosePrice})
       ]
       ]
       ]
       AND	[
       ListContainsAny({StandardStatus.R_Value},"U")
       NOT	[
       AND	[
       ({Original.StandardStatus.r_value})= "U"
       IsEmpty( {Original.EstimatedBuyerAgentMlsId})
       IsEmpty( {EstimatedBuyerAgentMlsId}) AND IsEmpty( {EstimatedBuyerFinancing.r_value}) AND IsEmpty({EstimatedCloseDate}) AND IsEmpty({EstimatedClosePrice})
       ]
       ]]]]
       
Available (Not Defined)

Warning (Not Defined)

EstimatedBuyerAgentStateLicense
As of 6/13/2018
Validation
AND	[
       OR	[
       (UpperCase(ToString({StandardStatus.r_value})) = "P" OR UpperCase(ToString({StandardStatus.r_value})) = "U")?(!ContainsRegx(Trim({EstimatedBuyerAgentStateLicense}),"(^1{7,20}$)|(^2{7,20}$)|(^3{7,20}$)|(^4{7,20}$)|(^5{7,20}$)|(^6{7,20}$)|(^7{7,20}$)|(^8{7,20}$)|(^9{7,20}$)|(^0{7,20}$)")):(~True)
       ToString({Original.EstimatedBuyerAgentStateLicense}) = ToString({EstimatedBuyerAgentStateLicense})
       ]]
       
Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,COMM,CLSE,BUSOP,LAND,MANU")
       OR	[
       (IsEmpty({EstimatedBuyerAgentStateLicense})) AND (!IsEmpty({EstimatedBuyerAgentMlsId}))
       UpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="AMNONMEMBER"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="A39999"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="FNONMEMBER"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="CH99999"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="C29999"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="DCNONMEMBER"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="NONMLSE"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="NOUTSIDE"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="IRECP"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="LC99999"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="MD991111111"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="MPNONMEMBER"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="MC99999"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="M43999"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="OR95965"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="VNONMEM"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="PANONMEMBER"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="SOUTSIDE"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="FOUT"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="TNONMLS"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="TC999"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="KRECP"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="H69999"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="W79999"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="YG000000000"ORUpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="699"
       ]
       !(UpperCase(Trim(ToString({EstimatedBuyerAgentMlsId})))="NONE-AUCTION")
       OR	[
       AND	[
       ListContainsAny({StandardStatus.R_Value},"P")
       NOT	[
       AND	[
       ListContainsAny({Original.StandardStatus.R_Value},"P")
       IsEmpty({Original.EstimatedBuyerAgentStateLicense})
       ]
       ]
       ]
       AND	[
       ListContainsAny({StandardStatus.R_Value},"U")
       NOT	[
       AND	[
       ListContainsAny({Original.StandardStatus.R_Value},"U")
       IsEmpty({Original.EstimatedBuyerAgentStateLicense})
       ]
       ]
       ]]]
       
Available (Not Defined)

Warning (Not Defined)

EstimatedBuyerFinancing
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,LAND,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       OR	[
       AND	[
       ListContainsAny({StandardStatus.R_Value},"P")
       NOT	[
       AND	[
       ListContainsAny({Original.StandardStatus.R_Value},"U")
       IsEmpty( {Original.EstimatedBuyerFinancing.r_value})
       IsEmpty( {EstimatedBuyerAgentMlsId}) AND IsEmpty( {EstimatedBuyerFinancing.r_value}) AND IsEmpty({EstimatedCloseDate}) AND IsEmpty({EstimatedClosePrice})
       ]
       ]]]]
       
Available (Not Defined)

Warning (Not Defined)

EstimatedBuyerTeamKey
As of 6/13/2018
Validation
AND	[
       OR	[
       IsEmpty({EstimatedBuyerTeamKey})
EB Member of Team
EB Leader of Team
]]

Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

EstimatedCloseDate
As of 6/13/2018
Validation
AND	[
       OR	[
       ListContainsAny({PropertyType.r_value},"RLSE,COMM,CLSE,BUSOP")
       ToString({EstimatedCloseDate},"MM/dd/yyyy") = ToString({Original.EstimatedCloseDate},"MM/dd/yyyy")
       IsEmpty({EstimatedCloseDate})
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGQ")
       AND	[
       {EstimatedCloseDate} >= {ListingContractDate}
       {EstimatedCloseDate} >= {PurchaseContractDate}
       DateDayDiff( {EstimatedCloseDate},Today( )) < 913
       {EstimatedCloseDate} >= {System.Today}
       ]]]
       
Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,LAND,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       OR	[
       AND	[
       ListContainsAny({StandardStatus.R_Value},"P")
       NOT	[
       AND	[
       UpperCase(ToString({Original.StandardStatus.r_value})) = "P"
       IsEmpty( {Original.EstimatedCloseDate})
       IsEmpty( {EstimatedBuyerAgentMlsId}) AND IsEmpty( {EstimatedBuyerFinancing.r_value}) AND IsEmpty({EstimatedCloseDate}) AND IsEmpty({EstimatedClosePrice})
       ]
       ]
       ]
       AND	[
       ListContainsAny({StandardStatus.R_Value},"U")
NOT	[
       AND	[
       UpperCase(ToString({Original.StandardStatus.r_value})) = "U"
       IsEmpty( {Original.EstimatedCloseDate})
       IsEmpty( {EstimatedBuyerAgentMlsId}) AND IsEmpty( {EstimatedBuyerFinancing.r_value}) AND IsEmpty({EstimatedCloseDate}) AND IsEmpty({EstimatedClosePrice})
       ]
       ]]]]
       
Available (Not Defined)

Warning (Not Defined)

EstimatedClosePrice
As of 6/13/2018
Validation
AND	[
       OR	[
       ListContainsAny({PropertyType.r_value},"RLSE,COMM,CLSE,BUSOP,LAND,MANU")
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ")
       AND	[
       ({EstimatedClosePrice} > 8888.0 AND {EstimatedClosePrice} < 999999999.0)
       !(ListContainsAny({PropertySubType.r_value},"TIMESHARE,TIME"))
       ]
       AND	[
       ({EstimatedClosePrice} > 0.0 AND {EstimatedClosePrice} < 99999999.0)
       (ListContainsAny({PropertySubType.r_value},"TIMESHARE,TIME"))
       ]
       !(ListContainsAny({StandardStatus.R_Value},"P,U"))
       LetNewValue = {EstimatedClosePrice},
       OldValue = {Original.EstimatedClosePrice}
       In(NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       ]
       ]
       
Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,LAND,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       OR	[
       And	[
       ListContainsAny({StandardStatus.R_Value},"P")
       NOT	[
       AND	[
       UpperCase(ToString({Original.StandardStatus.r_value})) = "P"
       IsEmpty( {Original.EstimatedClosePrice})
       IsEmpty( {EstimatedBuyerAgentMlsId}) AND IsEmpty( {EstimatedBuyerFinancing.r_value}) AND IsEmpty({EstimatedCloseDate}) AND IsEmpty({EstimatedClosePrice})
       ]
       ]
       ]
       AND	[
       ListContainsAny({StandardStatus.R_Value},"U")
       NOT	[
       AND	[
       UpperCase(ToString({Original.StandardStatus.r_value})) = "U"
       IsEmpty( {Original.EstimatedClosePrice})
       IsEmpty( {EstimatedBuyerAgentMlsId}) AND IsEmpty( {EstimatedBuyerFinancing.r_value}) AND IsEmpty({EstimatedCloseDate}) AND IsEmpty({EstimatedClosePrice})
       ]
]
       ]
       ]
       ]
       
Available (Not Defined)

Warning (Not Defined)

EstimatedCoBuyerAgentMlsId
As of 6/13/2018
Validation
AND	[
       OR	[
       IsEmpty({EstimatedCoBuyerAgentMlsId})
       {EstimatedCoBuyerAgentMlsId} = {Original.EstimatedCoBuyerAgentMlsId}
       ((!IsEmpty({ECOSA.Matrix_Unique_ID}))?({ECOSA.MemberStatus.r_value} = "A"):(~False))
       ]
       ]
       
Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

EstimatedCoBuyerAgentStateLicense
As of 6/13/2018
Validation
AND	[
       OR	[
       (UpperCase(ToString({StandardStatus.r_value})) = "P" OR UpperCase(ToString({StandardStatus.r_value})) = "U")?(!ContainsRegx(Trim({EstimatedCoBuyerAgentStateLicense}),"(^1{7,20}$)|(^2{7,20}$)|(^3{7,20}$)|(^4{7,20}$)|(^5{7,20}$)|(^6{7,20}$)|(^7{7,20}$)|(^8{7,20}$)|(^9{7,20}$)|(^0{7,20}$)")):(~True)
       ToString({Original.EstimatedCoBuyerAgentStateLicense}) = ToString({EstimatedCoBuyerAgentStateLicense})
       ]
       ]
       
Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,COMM,CLSE,BUSOP,LAND,MANU")
       OR	[
       (IsEmpty({EstimatedCoBuyerAgentStateLicense})) AND (!IsEmpty({EstimatedCoBuyerAgentMlsId}))
       UpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="AMNONMEMBER"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="A39999"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="FNONMEMBER"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="CH99999"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="C29999"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="DCNONMEMBER"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="NONMLSE"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="NOUTSIDE"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="IRECP"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="LC99999"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="MD991111111"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="MPNONMEMBER"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="MC99999"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="M43999"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="OR95965"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="VNONMEM"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="PANONMEMBER"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="SOUTSIDE"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="FOUT"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="TNONMLS"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="TC999"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="KRECP"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="H69999"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="W79999"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="YG000000000"ORUpperCase(Trim(ToString({EstimatedCoBuyerAgentMlsId})))="699"
       ]
       OR	[
       AND	[
       ListContainsAny({StandardStatus.R_Value},"P")
       NOT	[
       AND	[
       ListContainsAny({Original.StandardStatus.R_Value},"P")
       IsEmpty({Original.EstimatedCoBuyerAgentStateLicense})
       ToString({Original.EstimatedCoBuyerAgentMlsId}) = ToString({EstimatedCoBuyerAgentMlsId})
       ]
       ]
       ]
       AND	[
       ListContainsAny({StandardStatus.R_Value},"U")
       NOT	[
       AND	[
       ListContainsAny({Original.StandardStatus.R_Value},"U")
       IsEmpty({Original.EstimatedCoBuyerAgentStateLicense})
       ToString({Original.EstimatedCoBuyerAgentMlsId}) = ToString({EstimatedCoBuyerAgentMlsId})
       ]
       ]
       ]
       ]
       ]
       
Available (Not Defined)

Warning (Not Defined)

EstimatedCoBuyerTeamKey
As of 6/13/2018
Validation
AND	[
       OR(MSG)	[
       IsEmpty({EstimatedCoBuyerTeamKey})
       CoEB Member of Teams
       CoEB Leader of Teams
       ]
       ]
       
Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

EstimatedConcessionsAmount
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,LAND,MANU,RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       OR	[
       AND	[
       ListContainsAny({StandardStatus.R_Value},"P")
       NOT	[
       AND	[
       {Original.StandardStatus.r_value} = "P"
       IsEmpty( {Original.EstimatedConcessionsAmount})
       ]
       ]
       ]
       AND	[
       ListContainsAny({StandardStatus.R_Value},"U")
       NOT	[
       AND	[
       {Original.StandardStatus.r_value} = "U"
       IsEmpty( {Original.EstimatedConcessionsAmount})
       ]
       ]
       ]
       ]
       ]
       
Available (Not Defined)

Warning (Not Defined)

EstimatedConcessionsComments
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,LAND,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       OR	[
       AND	[
       ListContainsAny({StandardStatus.R_Value},"P")
       NOT	[
       AND	[
       {Original.StandardStatus.r_value} = "P"
       IsEmpty( {Original.EstimatedConcessionsComments})
       ]
       ]
       ]
       AND	[
       ListContainsAny({StandardStatus.R_Value},"U")
       NOT	[
       AND	[
       {Original.StandardStatus.r_value} = "U"
       IsEmpty( {Original.EstimatedConcessionsComments})
       ]
       ]
       ]
       ]
       ]
       
Available (Not Defined)

Warning (Not Defined)

ExistingLeaseType
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"CLSE")
       ]
       
Available (Not Defined)

Warning (Not Defined)

ExpirationDate
As of 6/13/2018
Validation
AND	[
       OR	[
       AND	[
       (({Original.StandardStatus.r_value}) ?? "I") = "I" AND {StandardStatus.r_value} = "A"
       {ExpirationDate} >= {ListingContractDate}
       ToFloat( DateDayDiff( {ExpirationDate},Today( ))) < ToFloat( 913)
       {ExpirationDate} >= ToDate(ToString(Today( ),"MM/dd/yyyy"))
       ]
       AND	[
       !((({Original.StandardStatus.r_value}) ?? "I") = "I" AND {StandardStatus.r_value} = "A")
       {ExpirationDate} >= {ListingContractDate}
       ToFloat( DateDayDiff( {ExpirationDate},Today( ))) < ToFloat( 913)
       OR	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"OM,HM,HB,DB")
       {ExpirationDate} > ToDate(ToString({Original.ExpirationDate},"MM/dd/yyyy"))
       ]
       ]
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ")
       LetNewValue = {ExpirationDate},
       OldValue = {Original.ExpirationDate}
       In(NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       ]
       ]
       
Required
AND	[
       ~true
       ]
       
Available (Not Defined)

Warning (Not Defined)

FireplaceFeatures
As of 6/13/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {FireplaceFeatures.r_Value},
       OrigFieldValue = {Original.FireplaceFeatures.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

FuelExpense
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       NOT	[
       {NumberOfSeparateGasMeters} = {NumberOfUnitsTotal}
       ]
       Let
       FieldValue = {FuelExpense},
       OrigFieldValue = {Original.FuelExpense}
       In
       !IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

Furnished
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {Furnished.r_Value},
       OrigFieldValue = {Original.Furnished.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

GarageSpaces
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,RINC,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       LetFieldValue = {GarageSpaces},
       OrigFieldValue = {Original.GarageSpaces}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

GrossIncome
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {GrossIncome},
       OrigFieldValue = {Original.GrossIncome}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

GrossScheduleIncome
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {GrossScheduledIncome},
       OrigFieldValue = {Original.GrossScheduledIncome}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
        
Available (Not Defined)

Warning (Not Defined)

HighSchoolDistrict
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,MANU")
       LetFieldValue = {HighSchoolDistrict.r_Value},
       OrigFieldValue = {Original.HighSchoolDistrict.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)
HighSchoolOther
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({HighSchool.R_Value},"OTHER")
       ]
       
Available (Not Defined)

Warning (Not Defined)

HoldActivationDate
As of 6/14/2018
Validation
AND	[
       OR	[
       IsEmpty({HoldActivationDate})
       ToString({HoldActivationDate},"MM/dd/yyy") = ToString({Original.HoldActivationDate} ,"MM/dd/yyy")
       AND	[
       {HoldActivationDate} <= ToDate(ToString( DateDayAdd( Today( ),30) ,"MM/dd/yyyy"))
       {HoldActivationDate} >= ToDate(ToString(Today( ) ,"MM/dd/yyyy"))
       ]
       ]
       ]	
       
Required
AND	[
       ListContainsAny({StandardStatus.R_Value},"H")
       NOT	[
       AND	[
       UpperCase(ToString({Original.StandardStatus.r_value})) = "H"
       IsEmpty({Original.HoldActivationDate})
       ]
       ]
]

Available (Not Defined)

Warning (Not Defined)

InsuranceExpense
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       LetFieldValue = {InsuranceExpense},
       OrigFieldValue = {Original.InsuranceExpense}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

InsuranceWaterFurnitureYN
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {InsuranceWaterFurnitureYN},
       OrigFieldValue = {Original.InsuranceWaterFurnitureYN}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

InternetAddressDisplayYN
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       LetFieldValue = {InternetAddressDisplayYN},
       OrigFieldValue = {Original.InternetAddressDisplayYN}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

InternetAutomatedValuationDisplayYN
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {InternetAutomatedValuationDisplayYN},
       OrigFieldValue = {Original.InternetAutomatedValuationDisplayYN}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

InternetConsumerCommentYN
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {InternetConsumerCommentYN},
       OrigFieldValue = {Original.InternetConsumerCommentYN}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)
InternetEntireListingDisplayYN
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       LetFieldValue = {InternetEntireListingDisplayYN},
       OrigFieldValue = {Original.InternetEntireListingDisplayYN}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

LandLeaseAmount
As of 6/14/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
       !({LandLeaseYN})
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {LandLeaseAmount},
       OrigFieldValue = {Original.LandLeaseAmount}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

LandLeaseYN
As of 6/14/2018
Validation
AND	[
       OR	[
       (ListContainsAny({PropertyType.r_value},"RESI") AND (ListContainsAny({PropertySubType.r_value},"MANL")) OR ListContainsAny({PropertyType.r_value},"RLSE"))
       AND
       {LandLeaseYN}=(~True)?(~False):(~True)
       Let
       NewValue = {LandLeaseYN},
       OldValue = {Original.LandLeaseYN}
       In
       (NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       ]
       ]
       
Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,LAND,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {LandLeaseYN},
       OrigFieldValue = {Original.LandLeaseYN}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

LandValue
As of 6/15/2018
Validation (Not Defined)

Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

LandValuePercent
As of 6/15/2018
Validation (Not Defined)

Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

Latitude
As of 6/15/2018
Validation (Not Defined)

Required
AND	[
       !({PropertyType.r_Value} = "Busop")
       LetFieldValue = {Latitude},
       OrigFieldValue = {Original.Latitude}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

LaundryFeatures
As of 6/15/2018
Validation (Not Defined)

Required
AND	[
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {LaundryFeatures.r_Value},
       OrigFieldValue = {Original.LaundryFeatures.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,RINC,COMM,MANU")
       ]
       
Available (Not Defined)

Warning (Not Defined)

LeaseConsideredYN
As of 6/15/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {LeaseConsideredYN},
       OrigFieldValue = {Original.LeaseConsideredYN}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

LeaseRenewalCompensation
As of 6/15/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {LeaseRenewalCompensation.r_Value},
       OrigFieldValue = {Original.LeaseRenewalCompensation.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

LeaseTerm
As of 6/15/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {LeaseTerm.r_Value},
       OrigFieldValue = {Original.LeaseTerm.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

Levels
As of 6/15/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

License1
As of 6/15/2018
Validation (Not Defined)

Required
AND	[
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       OR	[
       AND	[
       {PropertyType.r_Value} = "RESI"
       {PropertySubType.r_value} = "MANL"
       ]
       {PropertyType.r_Value} = "MANU"
       ]
       LetFieldValue = {License1},
       OrigFieldValue = {Original.License1}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

License2
As of 6/15/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       ListContainsAny({BodyType.r_value},"DOUBLE,TRIPLE")
       LetFieldValue = {License2},
       OrigFieldValue = {Original.License2}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning(Not Defined)

License3
As of 6/15/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       ListContainsAny({BodyType.r_value},"TRIPLE")
       LetFieldValue = {License3},
       OrigFieldValue = {Original.License3}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]

Available (Not Defined)

Warning (Not Defined)

ListAgentAOR
As of 6/15/2018
Validation
AND	[
       OR	[
       (IsEmpty({ListAgentAOR.r_value}))?(~False):(~True)
       {UserData.MemberMlsSecurityClass.r_value} = "TA"
       ]
       ]
       
Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

ListAgentEmailConfidential
As of 6/18/2018
Validation (Not Defined)

Required
AND	[
       Let
       FieldValue = {ListAgentEmailConfidential},
       OrigFieldValue = {Original.ListAgentEmailConfidential}
       In
       !IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

ListAgentMlsId
As of 6/18/2018
Validation
AND	[
       OR	[
       Let
       NewValue = {ListAgentMlsId},
       OldValue = {Original.ListAgentMlsId}
       In
       (NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       AND	[
       OR	[
       AND	[
       ({LA.MemberStatus.r_value} = "A") AND (!(ListContainsAny({LA.MemberMlsSecurityClass.R_Value},"PA,OA,OG,OD,PH,TP,ON,AP")))
       OR	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA")
       AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"BANGG,BANGP,BANGQ")
       !(ListContainsAny({LA.MemberMlsSecurityClass.R_Value},"PA,OA"))
       ]
       AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"BANGM,BANGN")
       (IsEmpty({CoListAgentMlsId}))?((({UserData.MemberAOR.r_value})) = (({LA.MemberAOR.r_value}))):(((({UserData.MemberAOR.r_value})) = (({LA.MemberAOR.r_value}))) OR ((({UserData.MemberAOR.r_value})) = (({COLA.MemberAOR.r_value}))))
       !(ListContainsAny({LA.MemberMlsSecurityClass.R_Value},"PA,OA"))
       ]
AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"DB,OM,HM,HB,AS,OA,CB")
       OR(MSG)	[
       ((({UserData.OfficeKeyNumeric}))) = ((({LA.OfficeKeyNumeric})))
       (IsEmpty({LO.MainOfficeKeyNumeric}))?(Trim(UpperCase( ToString({UserData.OfficeMlsId}))) = 
       Trim(UpperCase(ToString({LO.MainOfficeMlsId})))):(Trim(UpperCase( ToString({UserData.OfficeKeyNumeric}))) = 
       Trim(UpperCase(ToString({LO.MainOfficeKeyNumeric}))))
       ((({UserData.OfficeKeyNumeric}))) = ((({COLA.OfficeKeyNumeric})))
       ]
!(ListContainsAny({LA.MemberMlsSecurityClass.R_Value},"PA,OA"))
]
AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"AG,HA,AS,CA")
       OR	[
       UpperCase(ToString({UserData.MemberLoginId})) = UpperCase(ToString({ListAgentMlsId}))
       (UpperCase(ToString({ListAgentMlsId})) = UpperCase(ToString({UserData.MemberIsAssistantTo}))) AND (!IsEmpty({UserData.MemberIsAssistantTo}))
       AND	[
       UpperCase(ToString({UserData.MemberLoginId})) = UpperCase(ToString({CoListAgentMlsId}))
       ((((({CoListOfficeKeyNumeric}))) = ((({COLA.OfficeKeyNumeric})))) AND ((({Original.CoListOfficeKeyNumeric})) = (({CoListOfficeKeyNumeric}))))
       ]
]
AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"OA")
       OR	[
       AND	[
       ((({UserData.OfficeKeyNumeric}))) = ((({LA.OfficeKeyNumeric})))
       !(UpperCase(ToString({UserData.MemberLoginId})) = UpperCase(ToString({ListAgentMlsId})))
]
AND	[
       (IsEmpty({CoListAgentKeyNumeric}))?(~true):((!(ToString({UserData.Matrix_Unique_ID}) = ToString({CoListAgentKeyNumeric}))) AND (!(ToString({UserData.Matrix_Unique_ID}) = ToString({ListAgentKeyNumeric}))))
       ({UserData.OfficeKeyNumeric}) = ({CoListOfficeKeyNumeric})
]
]
]
AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"PA")
       (UpperCase(ToString({ListAgentMlsId})) = UpperCase(ToString({UserData.MemberIsAssistantTo}))) AND (!IsEmpty({UserData.MemberIsAssistantTo}))
       !(UpperCase(ToString({UserData.MemberLoginId})) = UpperCase(ToString({ListAgentMlsId})))
       (IsEmpty({CoListAgentKeyNumeric}))?(~true):((!(ToString({UserData.Matrix_Unique_ID}) = ToString({CoListAgentKeyNumeric}))) AND (!(ToString({UserData.Matrix_Unique_ID}) = ToString({ListAgentKeyNumeric}))))
       ((((({CoListOfficeKeyNumeric}))) = ((({COLA.OfficeKeyNumeric})))) AND ((({Original.CoListOfficeKeyNumeric})) = (({CoListOfficeKeyNumeric}))))
       ]
]
]
]
OR	[
       ListContainsAny({LA.OriginatingSystemId.R_Value},"CRM,CN")
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"BANGG,BANGP,BANGQ")
       ]
]
]
       LetNewValue = {ListAgentMlsId},
       OldValue = {Original.ListAgentMlsId}
       In(NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       ]
]
Required
AND	[
       ~true
       ]
       
Available (Not Defined)

Warning (Not Defined)

ListAgentStateLicense
As of 6/18/2018
Validation
AND	[
       OR	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ")
       (UpperCase(ToString({StandardStatus.r_value})) = "A")?(!ContainsRegx(Trim({ListAgentStateLicense}),"(^1{7,20}$)|(^2{7,20}$)|(^3{7,20}$)|(^4{7,20}$)|(^5{7,20}$)|(^6{7,20}$)|(^7{7,20}$)|(^8{7,20}$)|(^9{7,20}$)|(^0{7,20}$)")):(~True)
       Let
       NewValue = {ListAgentStateLicense},
       OldValue = {Original.ListAgentStateLicense}
       In
       (NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       ]
]

Required
AND	[
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       (IsEmpty({ListAgentStateLicense})) AND (!IsEmpty({ListAgentMlsId}))
       Let
       FieldValue = {ListAgentStateLicense},
       OrigFieldValue = {Original.ListAgentStateLicense}
       In
       !IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

ListingAgreement
As of 6/18/2018
Validation (Not Defined)

Required
AND	[
       ~true
       Not Change to Delete
       Let
       FieldValue = {ListingAgreement.r_Value},
       OrigFieldValue = {Original.ListingAgreement.r_Value}
       In
       !IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

ListingContractDate
As of 6/18/2018
Validation
AND	[
       OR	[
       IsEmpty({ListingContractDate})
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ")
       AND	[
       {ListingContractDate}<={System.Today}
       ToFloat(DateDayDiff(Today( ),{ListingContractDate})) < ToFloat(913)
       ({Original.StandardStatus.r_Value} ?? "I") = "I" AND ({StandardStatus.r_Value} = "A")
       ]
]
       AND	[
       OR	[
       {Original.ListingContractDate} = {ListingContractDate}
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGM,BANGN,BANGQ")
       ]
!(({Original.StandardStatus.r_Value} ?? "I") = "I" AND ({StandardStatus.r_Value} = "A"))
]
]

Required
AND	[
       ~true
       ]
       
Available (Not Defined)

Warning
AND	[
       OR	[
       AND	[
       ToFloat(DateDayDiff(Today( ),{ListingContractDate})) < ToFloat(30)
       ({Original.StandardStatus.r_Value} ?? "I") = "I" AND ({StandardStatus.r_Value} = "A")
       ]
!(({Original.StandardStatus.r_Value} ?? "I") = "I" AND ({StandardStatus.r_Value} = "A"))
]
]

ListingService
As of 6/18/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,RINC,LAND,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {ListingService.r_Value},
       OrigFieldValue = {Original.ListingService.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

ListingTerms
As of 6/18/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,LAND,MANU")
       OR	[
       LetFieldValue = {ListingTerms.r_Value},
       OrigFieldValue = {Original.ListingTerms.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGM,BANGN,BANGQ"))
       ]
       ]
       
Available (Not Defined)

Warning (Not Defined)

ListPrice
As of 6/18/2018
Validation
AND	[
       OR	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ")
       {ListPrice} = {Original.ListPrice}
       AND	[
       ListContainsAny({PropertyType.r_value},"RESI")
       OR	[
       AND	[
       ({ListPrice} > 8888.0 AND {ListPrice} < 999999999.0)
       !(ListContainsAny({PropertySubType.r_value},"TIMESHARE,TIME"))
       ]
       AND	[
       ({ListPrice} > 1.0 AND {ListPrice} < 99999999.0)
       (ListContainsAny({PropertySubType.r_value},"TIMESHARE,TIME"))
       ]
]
]
AND	[
       {PropertyType.r_Value} != "Resi"
       ({ListPrice} > 1.0 AND {ListPrice} < 99999999.0)
       ]
ListContainsAny({PropertyType.r_value},"CLSE")
]
]

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,RINC,COMM,BUSOP,LAND,MANU")
       LetFieldValue = {ListPrice},
       OrigFieldValue = {Original.ListPrice}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

ListPriceLow
As of 6/18/2018
Validation
AND	[
       OR	[
       IsEmpty({ListPriceLow})
ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ")
AND	[
       ({listprice}) > ({listpricelow})
       ({listpricelow}) >= (0.85 * ({listprice}))
       ]
AND	[
       ({ListPriceLow} = {Original.ListPriceLow})
       ({ListPrice} = {Original.ListPrice} )
       ]
]
]

Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

ListTeamKey
As of 6/18/2018
Validation
AND	[
       OR MSG	[
IsEmpty({ListTeamKey})
LA Member of Team
LA Leader of Team
]
]

Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

LivingArea
As of 6/18/2018
Validation
AND	[
       OR	[
       IsEmpty({LivingArea})
       Between 99 and 99999
       ]
]

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {LivingArea},
       OrigFieldValue = {Original.LivingArea}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

LivingAreaSource
As of 6/18/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {LivingAreaSource.r_Value},
       OrigFieldValue = {Original.LivingAreaSource.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

LockBoxLocation
As of 6/18/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,COMM,CLSE,BUSOP,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {LockBoxLocation},
       OrigFieldValue = {Original.LockBoxLocation}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

LockBoxType
As of 6/18/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,COMM,CLSE,BUSOP,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {LockBoxType.r_Value},
       OrigFieldValue = {Original.LockBoxType.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

LockBoxVersion
As of 6/18/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({LockBoxType.r_value},"SI")
       LetFieldValue = {LockBoxVersion.r_Value},
       OrigFieldValue = {Original.LockBoxVersion.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

Longitude
As of 6/18/2018
Validation (Not Defined)
       
Required
AND	[
       !({PropertyType.r_Value} = "BUSOP")
       LetFieldValue = {Longitude},
       OrigFieldValue = {Original.Longitude}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]

Available (Not Defined)

Warning (Not Defined)

LotFeatures
As of 6/18/2018
Validation (Not Defined)

Required
AND	[
       !({PropertyType.r_value} = "BUSOP")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {LotFeatures.r_Value},
       OrigFieldValue = {Original.LotFeatures.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)
LotSizeArea
As of 6/18/2018
Validation
AND	[
       OR	[
       ListContainsAny({PropertyType.r_value},"BUSOP,MANU")
       {PropertySubType.r_value} = "CONDO"
       OR	[
       AND	[
       {LotSizeUnits.r_value} = "ACRS"
       Between 0 to 100,000
       ]
       AND	[
       {LotSizeUnits.r_value} = "SQFT"
       Between 99 to 435,600,000
       ]
]
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ")
       IsEmpty({LotSizeArea})
       Let
       NewValue = {LotSizeArea},
       OldValue = {Original.LotSizeArea}
       In
       (NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       ]
       ]
       
Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,RINC,COMM,LAND,CLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       !({PropertySubType.r_value} = "CONDO" OR {PropertySubType.r_value} = "TWNHS" OR {PropertySubType.r_value} = "COOP" OR {PropertySubType.r_value} = "OYO"   OR {PropertySubType.r_value} = "TIME") ? (~true) : (~false)
       LetFieldValue = {LotSizeArea},
       OrigFieldValue = {Original.LotSizeArea}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)
Warning (Not Defined)

LotSizeSource
As of 6/18/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,RLSE,MANU")
       !IsEmpty({LotSizeSquareFeet}) OR !IsEmpty({LotSizeArea})
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {LotSizeSource.r_Value},
       OrigFieldValue = {Original.LotSizeSource.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

LotSizeUnits
As of 6/18/2018
Validation (Not Defined)

Required
AND	[
       !IsEmpty({LotSizeArea})
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       !({PropertyType.r_value} = "Busop")
       LetFieldValue = {LotSizeUnits.r_Value},
       OrigFieldValue = {Original.LotSizeUnits.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

MainLevelBathrooms
As of 6/18/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({Levels.r_value},"A,U,C")
       LetFieldValue = {MainLevelBathrooms},
       OrigFieldValue = {Original.MainLevelBathrooms}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ListContainsAny({PropertyType.r_Value},"RESI,RLSE")
       ]
       
Available (Not Defined)

Warning (Not Defined)

MainLevelBedrooms
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({Levels.r_value},"A,U,C")
       LetFieldValue = {MainLevelBedrooms},
       OrigFieldValue = {Original.MainLevelBedrooms}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ListContainsAny({PropertyType.r_Value},"RESI,RLSE")
       ]
       
Available (Not Defined)

Warning (Not Defined)

Matrix_Unique_ID
As of 6/19/2018
Validation
AND	[
       OR	[
       AND	[
       {System.TranType}="INSERT"
       OR	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA")
       AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"BANGG,BANGP,BANGM,BANGN,BANGQ,OA,AG,AS,DB,HA,HB,OM,HM,PA,CA,CB,TM,TN")
       ListContainsAny({UserData.OriginatingSystemId.r_value},"CRM,CCR,CN")
       ]
]
]
AND	[
       {System.TranType}="UPDATE"
       OR	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ")
       AND: Association/Board Level	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"BANGM,BANGN")
       (IsEmpty({CoListAgentMlsId}))?(UpperCase(ToString({UserData.MemberAOR.r_value})) = UpperCase(ToString({LA.MemberAOR.r_value}))):((UpperCase(ToString({UserData.MemberAOR.r_value})) = UpperCase(ToString({LA.MemberAOR.r_value}))) OR (UpperCase(ToString({UserData.MemberAOR.r_value})) = UpperCase(ToString({COLA.MemberAOR.r_value}))))
       ]
AND	[
       ListContainsAny({StandardStatus.R_Value},"I,A,U,H,P,W") OR  ((UpperCase(ToString({StandardStatus.r_value})) = "S") AND ((UpperCase(ToString({UserData.MemberAOR.r_value})) = "DW") OR (UpperCase(ToString({UserData.MemberAOR.r_value})) = "LG") OR (UpperCase(ToString({UserData.MemberAOR.r_value})) = "NP") OR (UpperCase(ToString({UserData.MemberAOR.r_value})) = "OC") OR (UpperCase(ToString({UserData.MemberAOR.r_value})) = "PW") OR (UpperCase(ToString({UserData.MemberAOR.r_value})) = "RS")) AND ({AutoSoldYN} = ~True) AND ((Contains(UpperCase(ToString({SpecialListingConditions.r_value})),"SPAY")) OR (Contains(UpperCase(ToString({SpecialListingConditions.r_value})),"FOR"))))
       OR	[
       AND: Main Office	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"OM,HM,HB,DB,OA,AS")
       OR	[
       {ListOfficeKeyNumeric}={UserData.OfficeKeyNumeric}
       {LO.MainOfficeKeyNumeric}={UserData.Office.MainOfficeKeyNumeric}
       {CoListOfficeKeyNumeric}={UserData.OfficeKeyNumeric}
       (!IsEmpty({ListTeamKeyNumeric})) AND {ListTeamKeyNumeric}={UserData.TL.Matrix_Unique_ID}
       ]
]
AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"AG,HA,AS")
       OR	[
       {ListAgentKeyNumeric}={UserData.Matrix_Unique_ID}
       {CoListAgentKeyNumeric}={UserData.Matrix_Unique_ID}
       (UpperCase(ToString({ListAgentMlsId})) = UpperCase(ToString({UserData.MemberIsAssistantTo}))) AND (!IsEmpty({UserData.MemberIsAssistantTo}))
       (!IsEmpty({ListTeamKeyNumeric})) AND {ListTeamKeyNumeric}={UserData.TL.Matrix_Unique_ID}
       ]
]
AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"PA")
       OR	[
       AND	[
       !({ListAgentKeyNumeric}={UserData.Matrix_Unique_ID})
       (UpperCase(ToString({ListAgentMlsId})) = UpperCase(ToString({UserData.MemberIsAssistantTo}))) AND (!IsEmpty({UserData.MemberIsAssistantTo}))
       ]
AND	[
       !({CoListAgentKeyNumeric}={UserData.Matrix_Unique_ID})
       (UpperCase(ToString({CoListAgentMlsId})) = UpperCase(ToString({UserData.MemberIsAssistantTo}))) AND (!IsEmpty({UserData.MemberIsAssistantTo}))
       ]
]
]
AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"OA")
       OR	[
       AND	[
       !({ListAgentKeyNumeric}={UserData.Matrix_Unique_ID})
       {ListOfficeKeyNumeric}={UserData.OfficeKeyNumeric}
]
AND	[
       !({CoListAgentKeyNumeric}={UserData.Matrix_Unique_ID})
       {CoListOfficeKeyNumeric}={UserData.OfficeKeyNumeric}
       ]
]
]
AND	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TM,TN")
       OR	[
       {ListAgentKeyNumeric}={UserData.Matrix_Unique_ID}
       (!IsEmpty({ListTeamKeyNumeric})) AND {ListTeamKeyNumeric}={UserData.TL.Matrix_Unique_ID}
       ]
]
]
(UpperCase(ToString({LA.OfficeMlsId})))=(UpperCase(ToString({ListOfficeMlsId})))
ListContainsAny({OriginatingSystemId.r_value},"CRM,CN")
]
]
ListContainsAny({UserData.OriginatingSystemId.r_value},"CRM,CCR,CN")
]
]
]

Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

MiddleOrJuniorSchoolOther
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({MiddleOrJuniorSchool.R_Value},"OTHER")
       ]
       
Available (Not Defined)

Warning (Not Defined)

MLSAreaMajor
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       OR	[
       ListContainsAny({CountyOrParish.R_Value},"LA,RI,SB,OR,SD,IM,SL,SA,VE,KR,LAK")
       AND	[
       ListContainsAny({CountyOrParish.R_Value},"MPA")
       LetFieldValue = {CountyOrParish.r_Value},
       OrigFieldValue = {Original.CountyOrParish.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
]
]

Available (Not Defined)

Warning (Not Defined)

MobileHomeRemainsYN
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
       OR	[
       LetFieldValue = {MobileHomeRemainsYN},
       OrigFieldValue = {Original.MobileHomeRemainsYN}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       ]
]

Available (Not Defined)

Warning (Not Defined)

MobileLength
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

MobileWidth
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

NetOperatingIncome
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {NetOperatingIncome},
       OrigFieldValue = {Original.NetOperatingIncome}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

NewTaxesExpense
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       LetFieldValue = {NewTaxesExpense},
       OrigFieldValue = {Original.NewTaxesExpense}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)
	
Warning (Not Defined)

NMRSellerParticipationYN
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       !({UserData.OriginatingSystemId.r_value} = "CN")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {NMRSellerParticipationYN},
       OrigFieldValue = {Original.NMRSellerParticipationYN}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

NumberOfBuilding
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {NumberOfBuildings},
       OrigFieldValue = {Original.NumberOfBuildings}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

NumberOfFullTimeEmployees
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"BUSOP")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

NumberOfPartTimeEmployees
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"BUSOP")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

NumberOfSeperateElectricMeters
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {NumberOfSeparateElectricMeters},
       OrigFieldValue = {Original.NumberOfSeparateElectricMeters}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

NumberOfSeperateGasMeters
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {NumberOfSeparateGasMeters},
       OrigFieldValue = {Original.NumberOfSeparateGasMeters}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

NumberOfSeperatedWaterMeters
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {NumberOfSeparateWaterMeters},
       OrigFieldValue = {Original.NumberOfSeparateWaterMeters}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

NumberOfUnitsInCommunity
As of 6/19/2018
Validation
AND	[
       OR	[
       AND	[
       >1.9
       OR	[
       (ListContainsAny({PropertySubType.r_value},"CONDO,TWNHS,COOP,OYO"))
       AND	[
       {PropertyType.r_Value} = "RLSE"
       {PropertySubType.r_value} = "APT"
       ]
]
ListContainsAny({PropertyType.r_value},"RESI,RLSE")
]
AND	[
       !(ListContainsAny({PropertySubType.r_value},"CONDO,TWNHS,APT,COOP,OYO"))
       ListContainsAny({PropertyType.r_value},"RESI,RLSE")
       ]
ListContainsAny({PropertyType.r_value},"RINC,COMM,CLSE,BUSOP,LAND,MANU")
LetNewValue = {NumberOfUnitsInCommunity},
OldValue = {Original.NumberOfUnitsInCommunity}
In(NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
]
]

Required
AND	[
       OR	[
       AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       ListContainsAny({PropertySubType.r_value},"CONDO,TWNHS,APT,COOP,OYO")
       ]
AND	[
       ListContainsAny({PropertyType.r_value},"RESI")
       ListContainsAny({PropertySubType.r_value},"CONDO,TWNHS,APT,COOP,OYO")
       ]
]
!(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
LetFieldValue = {NumberOfUnitsInCommunity},
OrigFieldValue = {Original.NumberOfUnitsInCommunity}
In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
]

Available (Not Defined)

Warning (Not Defined)

NumberOfUnitsTotal
As of 6/19/2018
Validation
AND	[
       OR	[
       LetNewValue = {NumberOfUnitsTotal},
       OldValue = {Original.NumberOfUnitsTotal}
       In(NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       AND	[
       >0.9
       OR	[
       ListContainsAny({PropertyType.r_value},"RESI")
       ListContainsAny({PropertyType.r_value},"RLSE")
       ]
]
AND	[
       Sum(UnitTypeUnitsTotal) = (NumberofUnitsTotal)
       ListContainsAny({PropertyType.r_value},"RINC")
       ]
ListContainsAny({PropertyType.r_value},"MANU,LAND,COMM,CLSE,BUSOP,FARM")
]
]

Required
AND	[
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       Let
       FieldValue = {NumberOfUnitsTotal},
       OrigFieldValue = {Original.NumberOfUnitsTotal}
       In
       !IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       OR	[
       ListContainsAny({PropertyType.r_value},"RINC")
       ListContainsAny({PropertyType.r_value},"RESI")
       ListContainsAny({PropertyType.r_value},"RLSE")
       ]
]

Available (Not Defined)

Warning (Not Defined)

OccupantType
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       {PropertyType.r_Value} != "RINC"
       {PropertyType.r_Value} != "LAND"
       LetFieldValue = {OccupantType.r_Value},
       OrigFieldValue = {Original.OccupantType.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

OnMarketDate
As of 6/19/2018
Validation
AND	[
       OR	[
       IsEmpty({OnMarketDate})
       AND	[
       {OnMarketDate}>={ListingContractDate}
       {OnMarketDate} <= {System.Today}
       ]
{StandardStatus.r_value}="I"
{SellerInstructedToExcludeYN} = ~false
]
]

Required (Not Defined)
	
Available
AND	[
       OR	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"BANGG,BANGK,BANGL,BANGM,BANGN,BANGP,BANGQ,TA")
       AND	[
       {SellerInstructedToExcludeYN}=~True
       !ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"BANGG,BANGK,BANGL,BANGM,BANGN,BANGP,BANGQ,TA")
       ({StandardStatus.R_Value}??"I")="I" OR
       (({Original.StandardStatus.R_Value}??"I")="I" AND {StandardStatus.r_Value} = "A")
       ]
]
]

Warning (Not Defined)

OperatingExpense
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {OperatingExpense},
       OrigFieldValue = {Original.OperatingExpense}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

OwnershipType
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"BUSOP")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       ]
       	
Available (Not Defined)

Warning (Not Defined)

ParcelNumber
As of 6/19/2018
Validation
AND	[
       OR: A	[
       AND	[
       ListContainsAny({CountyorParish.r_value},"LA")
       10 dig
       ]
AND	[
       ListContainsAny({CountyorParish.r_value},"RI")
       OR	[
       9 dig
       13 dig
       ]
]
AND	[
       ListContainsAny({CountyorParish.r_value},"SB")
       9dig1alp3dig
       ]
AND	[
       ListContainsAny({CountyorParish.r_value},"OR")
       8 dig
       ]
AND	[
       ListContainsAny({CountyorParish.r_value},"VE")
       10 dig
       ]
AND	[
       ListContainsAny({CountyorParish.r_value},"SD")
       10 dig
       ]
AND	[
       NOT	[
       ListContainsAny({CountyorParish.r_value},"LA,OR,RI,SB,SD,VE,AMA,BUT")
       ]
Contains( {ParcelNumber},"-") = ~False
]
AND	[
       ListContainsAny({CountyorParish.r_value},"AMA")
       OR	[
       12 dig
       LetNewValue = {ParcelNumber},
       OldValue = {Original.ParcelNumber}
       In(NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       ]
]
AND	[
       ListContainsAny({CountyorParish.r_value},"BUT")
       OR	[
       12 dig
       LetNewValue = {ParcelNumber},
       OldValue = {Original.ParcelNumber}
       In(NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
       ]
]
IsEmpty( {ParcelNumber})
]
OR: B	[
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ")
       AND	[
       ListContainsAny({PropertyType.r_value},"RESI")
       No Duplicate Active
       ]
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       No Duplicate Active
       ]
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       No Duplicate Active
       ]
       AND	[
       ListContainsAny({PropertyType.r_value},"LAND")
       No Duplicate Active
       ]
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
       No Duplicate Active
       ]
ListContainsAny({PropertyType.r_value},"COMM,CLSE,BUSOP")
LetNewValue = {ParcelNumber},
OldValue = {Original.ParcelNumber}
In(NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
]
OR: C	[
       NOT	[
       No all 0s or 9s
       ]
LetNewValue = {ParcelNumber},
OldValue = {Original.ParcelNumber}
In(NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
]
OR: D	[
       NOT	[
       Spaces
       ]
LetNewValue = {ParcelNumber},
OldValue = {Original.ParcelNumber}
In(NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
]
]

Required
AND	[
       ListContainsAny({PropertyType.r_value},"COMM,CLSE")
       ]
       
Available (Not Defined)

Warning
AND	[
       !(IsEmpty({ParcelNumber}))
       OR	[
       All zeros or nines
       No open w/same Parcel Number
       AND	[
       {Original.ParcelNumber} = {ParcelNumber}
       {System.TranType} = "UPDATE"
       ]
]
]

ParkingTotal
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {ParkingTotal},
       OrigFieldValue = {Original.ParkingTotal}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

ParkManagerName
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

ParkName
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

PetsAllowed
As of 6/19/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {PetsAllowed.r_Value},
       OrigFieldValue = {Original.PetsAllowed.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

PhotosCount
As of 6/19/2018
Validation (Not Defined)

Required (Not Defined)
	
Available (Not Defined)

Warning
AND	[
       (IsEmpty({PhotosCount}))?(~True):({PhotosCount}>0)
       ]

PoolFeatures
As of 6/19/2018
Validation
AND	[
       OR	[
       AND	[
       (Contains(UpperCase(ToString({PoolFeatures.r_value})),"AS")) OR (Contains(UpperCase(ToString({PoolFeatures.r_value})),"COM")) OR (Contains(UpperCase(ToString({PoolFeatures.r_value})),"PVT")) OR (Contains(UpperCase(ToString({PoolFeatures.r_value})),"NO"))   ? (~true) : (~false)
       OR	[
       !((Contains(UpperCase(ToString({PoolFeatures.r_value})),"NO")))  ? (~true) : (~false)
       (UpperCase(ToString({PoolFeatures.r_value}))="NO")  ? (~true) : (~false)
       ]
]
ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ")
ListContainsAny({PropertyType.r_value},"COMM,CLSE,BUSOP,LAND")
LetNewValue = {PoolFeatures.r_value},
OldValue = {Original.PoolFeatures.r_value}
In(NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,P"))
]
]

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,RINC,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {PoolFeatures.r_Value},
       OrigFieldValue = {Original.PoolFeatures.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

Possession
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

PossibleUseComments
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PossibleUse.R_Value},"SEEREM")
       ]
       
Available (Not Defined)
	
Warning (Not Defined)

PostalCode
As of 6/20/2018
Validation
AND	[
       OR	[
       5 digit
       IsEmpty({PostalCode})
       {PostalCode} = {Original.PostalCode}
       ]
]

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,RINC,COMM,CLSE,BUSOP,MANU")
       ]
       
Available (Not Defined)
	
Warning (Not Defined)

PostalCodePlus4
As of 6/20/2018
Validation
AND	[
       OR	[
       4 digits
IsEmpty({PostalCodePlus4})
{PostalCodePlus4} = {Original.PostalCodePlus4}
]
]

Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

PrivateRemarks
As of 6/20/2018
Validation
AND	[
       OR	[
       Length
       LetNewValue = {PrivateRemarks},
       OldValue = {Original.PrivateRemarks}
       In(NewValue = OldValue) AND !(({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.R_Value},"A,U,P"))
       ]
]

Required (Not Defined)

Available (Not Defined)
Warning (Not Defined)

ProfessionalManagementExpense
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       {NumberOfUnitsTotal} >= 5
       LetFieldValue = {ProfessionalManagementExpense},
       OrigFieldValue = {Original.ProfessionalManagementExpense}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

PropertySubType
As of 6/20/2018
Validation (Not Defined)
Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,COMM,CLSE")
       ]
       
Available (Not Defined)

Warning (Not Defined)

PublicRemarks
As of 6/20/2018
Validation
AND	[
       Length
       ]
       
Required (Not Defined)

Available (Not Defined)

Warning
AND	[
       NOT	[
       Phone
       ]
NOT	[
       Email
       ]
       NOT	[
       URL
       ]
NOT	[
       Access Codes or Information
       ]
NOT	[
       Children, Elderly or Disabled
       ]
       NOT	[
       Vacant
]
NOT	[
       Occupant Schedule
       ]
NOT	[
       Occupant Status or Personal Information
       ]
       NOT	[
       Open House
       ]
]

PurchaseContractDate
As of 6/20/2018
Validation
AND	[
       OR	[
       IsEmpty({PurchaseContractDate})
       ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ")
       AND	[
       {PurchaseContractDate} <= Today( )
       {PurchaseContractDate} >= {ListingContractDate}
       OR W/ MSG	[
       IsEmpty({Original.PurchaseContractDate})
       {PurchaseContractDate} >= {Original.PurchaseContractDate}
       ]
]
]
]

Required
AND	[
       ListContainsAny({StandardStatus.R_Value},"P,U,S")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

RentControlYN
As of 6/20/2018
Validation (Not Defined)
Required
AND	[
       ListContainsAny({PropertyType.r_value},"RINC")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {RentControlYN},
       OrigFieldValue = {Original.RentControlYN}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]

Available (Not Defined)

Warning (Not Defined)

RentIncludes
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {RentIncludes.r_Value},
       OrigFieldValue = {Original.RentIncludes.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

RentMax
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"CLSE")
       ]
       
Available (Not Defined)

Warning (Not Defined)

RentMin
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"CLSE")
       ]
       
Available (Not Defined)

Warning (Not Defined)

RoomType
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {RoomType.r_Value},
       OrigFieldValue = {Original.RoomType.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

SaleConsideredYN
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RLSE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {SaleConsideredYN},
       OrigFieldValue = {Original.SaleConsideredYN}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

SellerInstructedToExcludeYN
As of 6/20/2018
Validation (Not Defined)

Required (Not Defined)

Available
AND	[
       OR	[
       ListContainsAny({UserData.MemberMlsSecurityClass.r_value},"BANGG,BANGK,BANGL,BANGM,BANGN,BANGP,BANGQ,TA,NA")
       AND	[
       !ListContainsValue({UserData.MemberMlsSecurityClass.r_value},"BANGG,BANGK,BANGL,BANGM,BANGN,BANGP,BANGQ,TA")
       ({StandardStatus.R_Value}??"I")="I" OR
       (({Original.StandardStatus.R_Value}??"I")="I" AND {StandardStatus.r_Value} = "A")
       ]
]
]

Warning (Not Defined)

SeniorCommunityYN
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE,MANU,RINC,LAND")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       Let
       FieldValue = {SeniorCommunityYN},
       OrigFieldValue = {Original.SeniorCommunityYN}
       In
       !IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

SerialU
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       OR	[
       ListContainsAny({PropertyType.r_value},"MANU")
       AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RLSE")
       (ListContainsAny({PropertySubType.r_value},"MANL"))
       ]
]
!(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
LetFieldValue = {SerialU},
OrigFieldValue = {Original.SerialU}
In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
]

Available (Not Defined)

Warning (Not Defined)

SerialX
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
       ListContainsAny({BodyType.r_value},"DOUBLE,TRIPLE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {SerialX},
       OrigFieldValue = {Original.SerialX}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

SerialXX
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"MANU")
       ListContainsAny({BodyType.r_value},"TRIPLE")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {SerialXX},
       OrigFieldValue = {Original.SerialXX}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

Sewer
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,RLSE,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {Sewer.r_Value},
       OrigFieldValue = {Original.Sewer.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

ShowingContactType
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {ShowingContactType.r_Value},
       OrigFieldValue = {Original.ShowingContactType.r_Value}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

ShowingInstructions
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {ShowingInstructions},
       OrigFieldValue = {Original.ShowingInstructions}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

SpecialListingConditions
As of 6/20/2018
Validation
AND	[
       OR	[
       (
       	(Contains({SpecialListingConditions.r_value},"HUD") AND !ListContainsAny({SpecialListingConditions.r_value},"STD,FOR,NOD,SPAY,PBL,BNKR,TPAP"))
       	OR 
       	(Contains({SpecialListingConditions.r_value},"STD") AND !ListContainsAny({SpecialListingConditions.r_value},"FOR,NOD,REO,SPAY,PBL,AUCT,BNKR,TPAP,HUD")) 
       	OR 
       	(Contains({SpecialListingConditions.r_value},"FOR") AND !ListContainsAny({SpecialListingConditions.r_value},"HUD,STD,REO")) 
       	OR 
       	(Contains({SpecialListingConditions.r_value},"NOD") AND !ListContainsAny({SpecialListingConditions.r_value},"HUD,STD,REO"))
       	OR 
       	(Contains({SpecialListingConditions.r_value},"REO") AND !ListContainsAny({SpecialListingConditions.r_value},"HUD,FOR,NOD,STD,SPAY,PBL,BNKR")) 
       	OR 
       	(Contains({SpecialListingConditions.r_value},"SPAY") AND !ListContainsAny({SpecialListingConditions.r_value},"HUD,REO,STD"))  
       	OR 
       	(Contains({SpecialListingConditions.r_value},"PBL") AND !ListContainsAny({SpecialListingConditions.r_value},"HUD,REO,STD,BNKR"))  
       	OR 
       	(Contains({SpecialListingConditions.r_value},"BNKR") AND !ListContainsAny({SpecialListingConditions.r_value},"HUD,STD,REO,PBL")) 
       	OR 
       	(Contains({SpecialListingConditions.r_value},"AUCT") AND !ListContainsAny({SpecialListingConditions.r_value},"STD,BNKR")) 
       	OR
       	(Contains({SpecialListingConditions.r_value},"TPAP") AND !ListContainsAny({SpecialListingConditions.r_value},"HUD,STD"))  
       )
       	OR 
       (({System.TranType} = "UPDATE") AND ({Original.SpecialListingConditions.r_value} = {SpecialListingConditions.r_value}))
       ListContainsAny({PropertyType.r_value},"RLSE,CLSE,BUSOP")
       IsEmpty( {SpecialListingConditions.r_value})
       ListContainsAny({UserData.MemberMlsSecurityClass.r_value},"BANGG,BANGQ,BANGP,BANGM,BANGN")
       ]
]

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,COMM,LAND,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       Let
       FieldValue = {SpecialListingConditions.r_Value},
       OrigFieldValue = {Original.SpecialListingConditions.r_Value}
       In
       !IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

StandardStatus
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ~true
       ]
       
Available (Not Defined)

Warning (Not Defined)

StateOrProvince
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

StreetName
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       !(ListContainsAny({PropertyType.r_value},"BUSOP"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

StreetNumberNumeric
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       !(ListContainsAny({PropertyType.r_value},"BUSOP"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

SubdivisionName
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       NOT	[
       ListContainsAny({PropertyType.r_value},"COMM,CLSE,BUSOP")
       ]
When There are Valid Subdivisions
!(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGQ,BANGM,BANGN"))
LetFieldValue = {SubdivisionName},
OrigFieldValue = {Original.SubdivisionName}
In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
]

Available (Not Defined)

Warning (Not Defined)

SubdivisionNameOther
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       {SubdivisionName}="Other (OTHR)"
       LetFieldValue = {SubdivisionNameOther},
       OrigFieldValue = {Original.SubdivisionNameOther}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

SyndicationRemarks
As of 6/20/2018
Validation
AND	[
       Length
       ]
       
Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

TaxesPercent
As of 6/20/2018
Validation
AND	[
       OR	[
       AND	[
       OR	[
       IsEmpty({TaxesPercent})
       0-99.99
       ]
]
ListContainsAny({PropertyType.r_value},"RINC")
NOT	[
       ListContainsAny({PropertyType.r_value},"RINC")
       ]
]
]

Required (Not Defined)

Available (Not Defined)

Warning (Not Defined)

TaxLot
As of 6/20/2018
Validation (Not Defined)

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,RLSE,MANU")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       ListContainsAny({CountyOrParish.R_Value},"LA,RI,SB,OR,SD,IM,VE,KR")
       LetFieldValue = {TaxLot},
       OrigFieldValue = {Original.TaxLot}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)

TaxTractNumber
As of 6/20/2018
Validation
AND	[
       OR	[
       OR	[
       (UpperCase(ToString({CountyOrParish.r_value})) != "VE") AND (Len( {TaxTractNumber} ) <= 6)
       ListContainsAny({CountyorParish.r_value},"VE")
       ]
ListContainsAny({PropertyType.r_value},"COMM,CLSE,BUSOP,LAND")
]
]

Required
AND	[
       ListContainsAny({PropertyType.r_value},"RESI,RINC,RLSE,MANU")
       ListContainsAny({CountyorParish.r_value},"LA,OR,RI,SB,VE,SD,IM,KR")
       !(ListContainsAny({UserData.MemberMlsSecurityClass.R_Value},"TA,BANGG,BANGP,BANGM,BANGN,BANGQ"))
       LetFieldValue = {TaxTractNumber},
       OrigFieldValue = {Original.TaxTractNumber}
       In!IsEmpty(FieldValue) OR (!IsEmpty(OrigFieldValue)) OR (({Original.StandardStatus.R_Value}??"I") = "I" and ListContainsAny({StandardStatus.r_Value},"A"))
       ]
       
Available (Not Defined)

Warning (Not Defined)
